version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nutrition-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@postgres:5432/${PGDATABASE}
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - ENABLE_IMAGE_UPLOAD=${ENABLE_IMAGE_UPLOAD:-true}
      - ENABLE_VOICE_RECOGNITION=${ENABLE_VOICE_RECOGNITION:-true}
      - ENABLE_ACCESSIBILITY_FEATURES=${ENABLE_ACCESSIBILITY_FEATURES:-true}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-ar}
    volumes:
      - app-logs:/app/logs
      - app-uploads:/app/uploads
    networks:
      - nutrition-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: nutrition-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${PGDATABASE:-nutrition_app}
      - POSTGRES_USER=${PGUSER:-nutrition_user}
      - POSTGRES_PASSWORD=${PGPASSWORD:-nutrition_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - nutrition-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-nutrition_user} -d ${PGDATABASE:-nutrition_app}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: nutrition-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis-data:/data
    networks:
      - nutrition-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nutrition-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - nutrition-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
  app-uploads:
    driver: local

networks:
  nutrition-network:
    driver: bridge